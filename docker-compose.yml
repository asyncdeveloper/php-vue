version: '3'

services:
  client:
    stdin_open: true
    tty: true
    container_name: client
    build:
      context: client
      dockerfile: Dockerfile
    volumes:
      - ./client:/var/www/html/
      - /var/www/html/node_modules
    ports:
      - 5173:5173
    networks:
      - app-network
  server:
    container_name: server
    build:
      context: server
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    working_dir: /var/www/html/
    volumes:
      - ./server:/var/www/html/
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./docker/php/opcache.ini:/usr/local/etc/php/conf.d/opcache.ini
    networks:
      - app-network
  webserver:
    container_name: webserver
    depends_on:
      - server
    build:
      context: nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
    networks:
      - app-network
  mysql:
    container_name: mysql
    platform: linux/x86_64
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    tty: true
    volumes:
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/db.sql:/docker-entrypoint-initdb.d/datadump.sql
    networks:
      - app-network
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: ${DB_DATABASE:-database}
      MYSQL_USER: ${DB_USERNAME:-username}
      MYSQL_PASSWORD: ${DB_PASSWORD:-password}

networks:
  app-network:
    driver: bridge

volumes:
  app-data:
    driver: local